global:
  nodeSelector:
    iam.gke.io/gke-metadata-server-enabled: "true"

configs:
  cm:
    # create devops account with apiKey capability
    accounts.devops: apiKey
    url: "https://${feature}.${env}.${dns_name}"
    dex.config: |
      connectors:
        - type: github
          id: github
          name: GitHub
          config:
            clientID: ${extra_vars.github_client_id}
            clientSecret: $argocd-secret:dex.github.clientSecret
            redirectURI: 'https://${feature}.${env}.${dns_name}/api/dex/callback'
            orgs:
              - name: ${extra_vars.github_orgs}
  params:
    server.insecure: true
  rbac:
    policy.default: role:readonly
    policy.csv: |
      # default policy
      p, role:readonly, applications, get, */*, allow
      p, role:readonly, certificates, get, *, allow
      p, role:readonly, clusters, get, *, allow
      p, role:readonly, repositories, get, *, allow
      p, role:readonly, projects, get, *, allow
      p, role:readonly, accounts, get, *, allow
      p, role:readonly, gpgkeys, get, *, allow
      p, role:readonly, logs, get, */*, allow
      # admin policy
      p, role:devops-role, applications, create, */*, allow
      p, role:devops-role, applications, update, */*, allow
      p, role:devops-role, applications, delete, */*, allow
      p, role:devops-role, applications, sync, */*, allow
      p, role:devops-role, applications, override, */*, allow
      p, role:devops-role, applications, action/*, */*, allow
      p, role:devops-role, applicationsets, get, */*, allow
      p, role:devops-role, applicationsets, create, */*, allow
      p, role:devops-role, applicationsets, update, */*, allow
      p, role:devops-role, applicationsets, delete, */*, allow
      p, role:devops-role, certificates, create, *, allow
      p, role:devops-role, certificates, update, *, allow
      p, role:devops-role, certificates, delete, *, allow
      p, role:devops-role, clusters, create, *, allow
      p, role:devops-role, clusters, update, *, allow
      p, role:devops-role, clusters, delete, *, allow
      p, role:devops-role, repositories, create, *, allow
      p, role:devops-role, repositories, update, *, allow
      p, role:devops-role, repositories, delete, *, allow
      p, role:devops-role, projects, create, *, allow
      p, role:devops-role, projects, update, *, allow
      p, role:devops-role, projects, delete, *, allow
      p, role:devops-role, accounts, update, *, allow
      p, role:devops-role, gpgkeys, create, *, allow
      p, role:devops-role, gpgkeys, delete, *, allow
      p, role:devops-role, exec, create, */*, allow
      # set admin policy for devops team in github orgs
      g, ${extra_vars.github_orgs}:devops, role:devops-role
      g, devops, role:devops-role

# ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/
controller:
  serviceAccount:
    annotations:
      iam.gke.io/gcp-service-account: "${service_account_annotation}"
server:
  serviceAccount:
    annotations:
      iam.gke.io/gcp-service-account: "${service_account_annotation}"
  service:
    annotations:
      cloud.google.com/neg: '{"ingress": true}'
      cloud.google.com/backend-config: '{"ports": {"http":"${unit}-${feature}-server"}}'
    type: ClusterIP
    servicePortHttp: 80
    servicePortHttpName: http
  ingress:
    enabled: true
    hosts:
      - "${feature}.${env}.${dns_name}"
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "${feature}.${env}.${dns_name}"
      external-dns.alpha.kubernetes.io/ttl: "300"
      kubernetes.io/ingress.class: "gce"
      # kubernetes.io/ingress.global-static-ip-name: ""
      networking.gke.io/managed-certificates: "${unit}-${feature}-server"
      networking.gke.io/v1beta1.FrontendConfig: "${unit}-${feature}-server"
    # http: false
  GKEmanagedCertificate:
    enabled: true
    domains:
      - "${feature}.${env}.${dns_name}"
  GKEbackendConfig:
    enabled: true
    spec:
      healthCheck:
        checkIntervalSec: 5
        timeoutSec: 5
        healthyThreshold: 2
        unhealthyThreshold: 2
        type: HTTP
        requestPath: /healthz
        port: 8080
  GKEfrontendConfig:
    enabled: true
    spec:
      redirectToHttps:
        enabled: true
        responseCodeName: MOVED_PERMANENTLY_DEFAULT